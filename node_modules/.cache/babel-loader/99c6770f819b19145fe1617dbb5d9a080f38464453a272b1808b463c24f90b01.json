{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"progress-section\"\n};\nconst _hoisted_2 = {\n  class: \"progress-grid\"\n};\nconst _hoisted_3 = {\n  class: \"progress-item\"\n};\nconst _hoisted_4 = {\n  class: \"progress-item\"\n};\nconst _hoisted_5 = {\n  class: \"progress-item\"\n};\nconst _hoisted_6 = {\n  class: \"progress-item\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  class: \"overall-progress\"\n};\nconst _hoisted_10 = {\n  class: \"test-section\"\n};\nconst _hoisted_11 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StatusBadge = _resolveComponent(\"StatusBadge\");\n  const _component_KeyTestResultTable = _resolveComponent(\"KeyTestResultTable\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"密钥测试\", -1 /* CACHED */)), _createCommentVNode(\" 密钥进度显示 \"), $data.progress ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"密钥收集进度\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"公钥:\", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($data.progress.public_key.received_shares) + \"/\" + _toDisplayString($data.progress.public_key.total_expected) + \" \", 1 /* TEXT */), _createVNode(_component_StatusBadge, {\n    status: $data.progress.public_key.ready ? 'ready' : 'pending'\n  }, null, 8 /* PROPS */, [\"status\"])]), _createElementVNode(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"私钥:\", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($data.progress.secret_key.received_shares) + \"/\" + _toDisplayString($data.progress.secret_key.total_expected) + \" \", 1 /* TEXT */), _createVNode(_component_StatusBadge, {\n    status: $data.progress.secret_key.ready ? 'ready' : 'pending'\n  }, null, 8 /* PROPS */, [\"status\"])]), _createElementVNode(\"div\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"伽罗瓦密钥:\", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($data.progress.galois_keys.completed_keys) + \"/\" + _toDisplayString($data.progress.galois_keys.total_keys) + \" \", 1 /* TEXT */), _createVNode(_component_StatusBadge, {\n    status: $data.progress.galois_keys.ready ? 'ready' : 'pending'\n  }, null, 8 /* PROPS */, [\"status\"])]), _createElementVNode(\"div\", _hoisted_6, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"重线性化密钥:\", -1 /* CACHED */)), $data.progress.relinearization_key.round1_ready ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"R1✓\")) : _createCommentVNode(\"v-if\", true), $data.progress.relinearization_key.round2_ready ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"R2✓\")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_StatusBadge, {\n    status: $data.progress.relinearization_key.ready ? 'ready' : 'pending'\n  }, null, 8 /* PROPS */, [\"status\"])])]), _createElementVNode(\"div\", _hoisted_9, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"总体进度:\", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($data.progress.overall_progress) + \"% \", 1 /* TEXT */), _createVNode(_component_StatusBadge, {\n    status: $data.progress.all_keys_ready ? 'ready' : 'pending'\n  }, null, 8 /* PROPS */, [\"status\"])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 密钥测试 \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.testAll && $options.testAll(...args)),\n    disabled: $data.loading || !$data.progress?.all_keys_ready\n  }, _toDisplayString($data.loading ? '测试中...' : '测试所有密钥'), 9 /* TEXT, PROPS */, _hoisted_11), $data.results ? (_openBlock(), _createBlock(_component_KeyTestResultTable, {\n    key: 0,\n    testResults: $data.results\n  }, null, 8 /* PROPS */, [\"testResults\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_createCommentVNode","$data","progress","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","public_key","received_shares","total_expected","_createVNode","_component_StatusBadge","status","ready","_hoisted_4","secret_key","_hoisted_5","galois_keys","completed_keys","total_keys","_hoisted_6","relinearization_key","round1_ready","_hoisted_7","round2_ready","_hoisted_8","_hoisted_9","overall_progress","all_keys_ready","_hoisted_10","onClick","_cache","args","$options","testAll","disabled","loading","_hoisted_11","results","_createBlock","_component_KeyTestResultTable","testResults"],"sources":["D:\\down\\MPHEDEV\\encryption_co\\src\\views\\KeyTest.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>密钥测试</h2>\r\n    \r\n    <!-- 密钥进度显示 -->\r\n    <div v-if=\"progress\" class=\"progress-section\">\r\n      <h3>密钥收集进度</h3>\r\n      <div class=\"progress-grid\">\r\n        <div class=\"progress-item\">\r\n          <strong>公钥:</strong> {{ progress.public_key.received_shares }}/{{ progress.public_key.total_expected }}\r\n          <StatusBadge :status=\"progress.public_key.ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n        <div class=\"progress-item\">\r\n          <strong>私钥:</strong> {{ progress.secret_key.received_shares }}/{{ progress.secret_key.total_expected }}\r\n          <StatusBadge :status=\"progress.secret_key.ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n        <div class=\"progress-item\">\r\n          <strong>伽罗瓦密钥:</strong> {{ progress.galois_keys.completed_keys }}/{{ progress.galois_keys.total_keys }}\r\n          <StatusBadge :status=\"progress.galois_keys.ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n        <div class=\"progress-item\">\r\n          <strong>重线性化密钥:</strong> \r\n          <span v-if=\"progress.relinearization_key.round1_ready\">R1✓</span>\r\n          <span v-if=\"progress.relinearization_key.round2_ready\">R2✓</span>\r\n          <StatusBadge :status=\"progress.relinearization_key.ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"overall-progress\">\r\n        <strong>总体进度:</strong> {{ progress.overall_progress }}%\r\n        <StatusBadge :status=\"progress.all_keys_ready ? 'ready' : 'pending'\" />\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 密钥测试 -->\r\n    <div class=\"test-section\">\r\n      <button @click=\"testAll\" :disabled=\"loading || !progress?.all_keys_ready\">\r\n        {{ loading ? '测试中...' : '测试所有密钥' }}\r\n      </button>\r\n      <KeyTestResultTable v-if=\"results\" :testResults=\"results\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { testKeys, getKeyProgress } from '@/api/coordinator'\r\nimport KeyTestResultTable from '@/components/KeyTestResultTable.vue'\r\nimport StatusBadge from '@/components/StatusBadge.vue'\r\n\r\nexport default {\r\n  name: 'KeyTest',\r\n  components: { KeyTestResultTable, StatusBadge },\r\n  data() {\r\n    return {\r\n      results: null,\r\n      loading: false,\r\n      progress: null\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.fetchProgress()\r\n  },\r\n  methods: {\r\n    async fetchProgress() {\r\n      try {\r\n        const res = await getKeyProgress()\r\n        this.progress = res.data\r\n      } catch (e) {\r\n        console.error('获取密钥进度失败:', e)\r\n      }\r\n    },\r\n    async testAll() {\r\n      this.loading = true\r\n      try {\r\n        const res = await testKeys({ \r\n          test_types: ['public_key', 'relinearization_key', 'galois_keys'] \r\n        })\r\n        this.results = res.data.test_results\r\n      } catch (e) {\r\n        alert('测试失败: ' + (e.response?.data?.message || e.message))\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.progress-section {\r\n  background: #f5f5f5;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n.progress-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 15px;\r\n  margin: 15px 0;\r\n}\r\n.progress-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n.overall-progress {\r\n  margin-top: 15px;\r\n  padding-top: 15px;\r\n  border-top: 1px solid #ddd;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n.test-section {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}