{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass(['status-badge', $options.statusClass])\n  }, _toDisplayString($options.label), 3 /* TEXT, CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","statusClass","label"],"sources":["D:\\down\\MPHEDEV\\encryption_co\\src\\components\\StatusBadge.vue"],"sourcesContent":["<template>\r\n  <span :class=\"['status-badge', statusClass]\">{{ label }}</span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StatusBadge',\r\n  props: {\r\n    status: { \r\n      type: String, \r\n      required: true,\r\n      validator: function(value) {\r\n        return ['online', 'offline', 'passed', 'failed', 'pending', 'ready'].includes(value);\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    statusClass() {\r\n      switch (this.status) {\r\n        case 'online': return 'badge-online'\r\n        case 'offline': return 'badge-offline'\r\n        case 'passed': return 'badge-passed'\r\n        case 'failed': return 'badge-failed'\r\n        case 'pending': return 'badge-pending'\r\n        case 'ready': return 'badge-ready'\r\n        default: return 'badge-default'\r\n      }\r\n    },\r\n    label() {\r\n      switch (this.status) {\r\n        case 'online': return '在线'\r\n        case 'offline': return '离线'\r\n        case 'passed': return '通过'\r\n        case 'failed': return '失败'\r\n        case 'pending': return '等待中'\r\n        case 'ready': return '就绪'\r\n        default: return this.status\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.status-badge {\r\n  display: inline-block;\r\n  padding: 2px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  color: #fff;\r\n}\r\n.badge-online { background: #4caf50; }\r\n.badge-offline { background: #f44336; }\r\n.badge-passed { background: #2196f3; }\r\n.badge-failed { background: #ff9800; }\r\n.badge-pending { background: #9e9e9e; }\r\n.badge-ready { background: #4caf50; }\r\n.badge-default { background: #9e9e9e; }\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAA+D;IAAxDC,KAAK,EAAAC,eAAA,kBAAmBC,QAAA,CAAAC,WAAW;sBAAMD,QAAA,CAAAE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}