{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"participant-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StatusBadge = _resolveComponent(\"StatusBadge\");\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"URL\"), _createElementVNode(\"th\", null, \"状态\"), _createElementVNode(\"th\", null, \"最后心跳\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.participants, p => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: p.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(p.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(p.url || '-'), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_StatusBadge, {\n      status: p.status\n    }, null, 8 /* PROPS */, [\"status\"])]), _createElementVNode(\"td\", null, _toDisplayString(p.last_heartbeat || '-'), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$props","participants","p","key","id","_toDisplayString","url","_createVNode","_component_StatusBadge","status","last_heartbeat"],"sources":["D:\\down\\MPHEDEV\\encryption_co\\src\\components\\ParticipantList.vue"],"sourcesContent":["<template>\r\n  <table class=\"participant-list\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>URL</th>\r\n        <th>状态</th>\r\n        <th>最后心跳</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"p in participants\" :key=\"p.id\">\r\n        <td>{{ p.id }}</td>\r\n        <td>{{ p.url || '-' }}</td>\r\n        <td><StatusBadge :status=\"p.status\" /></td>\r\n        <td>{{ p.last_heartbeat || '-' }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport StatusBadge from './StatusBadge.vue'\r\nexport default {\r\n  name: 'ParticipantList',\r\n  components: { StatusBadge },\r\n  props: {\r\n    participants: { \r\n      type: Array, \r\n      required: true,\r\n      // 验证数据结构为 ParticipantStatus[]\r\n      validator: function(value) {\r\n        return value.every(p => \r\n          typeof p.id === 'number' && \r\n          typeof p.url === 'string' && \r\n          typeof p.status === 'string' && \r\n          typeof p.last_heartbeat === 'string'\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.participant-list {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n.participant-list th, .participant-list td {\r\n  border: 1px solid #eee;\r\n  padding: 6px 10px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAkB;;;uBAA/BC,mBAAA,CAiBQ,SAjBRC,UAiBQ,G,0BAhBNC,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAa,YAAT,MAAI,E,uBAGZA,mBAAA,CAOQ,iB,kBANNF,mBAAA,CAKKG,SAAA,QAAAC,WAAA,CALWC,MAAA,CAAAC,YAAY,EAAjBC,CAAC;yBAAZP,mBAAA,CAKK;MAL0BQ,GAAG,EAAED,CAAC,CAACE;QACpCP,mBAAA,CAAmB,YAAAQ,gBAAA,CAAZH,CAAC,CAACE,EAAE,kBACXP,mBAAA,CAA2B,YAAAQ,gBAAA,CAApBH,CAAC,CAACI,GAAG,yBACZT,mBAAA,CAA2C,aAAvCU,YAAA,CAAkCC,sBAAA;MAApBC,MAAM,EAAEP,CAAC,CAACO;2CAC5BZ,mBAAA,CAAsC,YAAAQ,gBAAA,CAA/BH,CAAC,CAACQ,cAAc,wB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}