{"ast":null,"code":"import { getKeyProgress } from '@/api/coordinator';\nimport StatusBadge from '@/components/StatusBadge.vue';\nexport default {\n  name: 'KeyProgress',\n  components: {\n    StatusBadge\n  },\n  data() {\n    return {\n      progress: null\n    };\n  },\n  computed: {\n    publicKeyPercent() {\n      if (!this.progress) return 0;\n      return Math.round(this.progress.public_key.received_shares / this.progress.public_key.total_expected * 100);\n    },\n    secretKeyPercent() {\n      if (!this.progress) return 0;\n      return Math.round(this.progress.secret_key.received_shares / this.progress.secret_key.total_expected * 100);\n    },\n    galoisKeysPercent() {\n      if (!this.progress) return 0;\n      return Math.round(this.progress.galois_keys.completed_keys / this.progress.galois_keys.total_keys * 100);\n    }\n  },\n  async mounted() {\n    await this.fetchProgress();\n  },\n  methods: {\n    async fetchProgress() {\n      try {\n        const res = await getKeyProgress();\n        this.progress = res.data;\n      } catch (e) {\n        console.error('获取密钥进度失败:', e);\n        alert('获取密钥进度失败: ' + (e.response?.data?.message || e.message));\n      }\n    }\n  }\n};","map":{"version":3,"names":["getKeyProgress","StatusBadge","name","components","data","progress","computed","publicKeyPercent","Math","round","public_key","received_shares","total_expected","secretKeyPercent","secret_key","galoisKeysPercent","galois_keys","completed_keys","total_keys","mounted","fetchProgress","methods","res","e","console","error","alert","response","message"],"sources":["D:\\down\\MPHEDEV\\encryption_co\\src\\views\\KeyProgress.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>密钥收集进度</h2>\r\n    \r\n    <div v-if=\"progress\" class=\"progress-container\">\r\n      <!-- 公钥进度 -->\r\n      <div class=\"key-section\">\r\n        <h3>公钥收集</h3>\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress-fill\" :style=\"{ width: publicKeyPercent + '%' }\"></div>\r\n        </div>\r\n        <div class=\"progress-info\">\r\n          <span>{{ progress.public_key.received_shares }}/{{ progress.public_key.total_expected }}</span>\r\n          <StatusBadge :status=\"progress.public_key.ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 私钥进度 -->\r\n      <div class=\"key-section\">\r\n        <h3>私钥收集</h3>\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress-fill\" :style=\"{ width: secretKeyPercent + '%' }\"></div>\r\n        </div>\r\n        <div class=\"progress-info\">\r\n          <span>{{ progress.secret_key.received_shares }}/{{ progress.secret_key.total_expected }}</span>\r\n          <StatusBadge :status=\"progress.secret_key.ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 伽罗瓦密钥进度 -->\r\n      <div class=\"key-section\">\r\n        <h3>伽罗瓦密钥收集</h3>\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress-fill\" :style=\"{ width: galoisKeysPercent + '%' }\"></div>\r\n        </div>\r\n        <div class=\"progress-info\">\r\n          <span>{{ progress.galois_keys.completed_keys }}/{{ progress.galois_keys.total_keys }}</span>\r\n          <StatusBadge :status=\"progress.galois_keys.ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 重线性化密钥进度 -->\r\n      <div class=\"key-section\">\r\n        <h3>重线性化密钥收集</h3>\r\n        <div class=\"round-status\">\r\n          <div class=\"round-item\">\r\n            <span>第一轮:</span>\r\n            <StatusBadge :status=\"progress.relinearization_key.round1_ready ? 'ready' : 'pending'\" />\r\n          </div>\r\n          <div class=\"round-item\">\r\n            <span>第二轮:</span>\r\n            <StatusBadge :status=\"progress.relinearization_key.round2_ready ? 'ready' : 'pending'\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"progress-info\">\r\n          <StatusBadge :status=\"progress.relinearization_key.ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 总体进度 -->\r\n      <div class=\"overall-section\">\r\n        <h3>总体进度</h3>\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress-fill overall\" :style=\"{ width: progress.overall_progress + '%' }\"></div>\r\n        </div>\r\n        <div class=\"progress-info\">\r\n          <span>{{ progress.overall_progress }}%</span>\r\n          <StatusBadge :status=\"progress.all_keys_ready ? 'ready' : 'pending'\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"loading\">\r\n      加载密钥进度中...\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getKeyProgress } from '@/api/coordinator'\r\nimport StatusBadge from '@/components/StatusBadge.vue'\r\n\r\nexport default {\r\n  name: 'KeyProgress',\r\n  components: { StatusBadge },\r\n  data() {\r\n    return {\r\n      progress: null\r\n    }\r\n  },\r\n  computed: {\r\n    publicKeyPercent() {\r\n      if (!this.progress) return 0\r\n      return Math.round((this.progress.public_key.received_shares / this.progress.public_key.total_expected) * 100)\r\n    },\r\n    secretKeyPercent() {\r\n      if (!this.progress) return 0\r\n      return Math.round((this.progress.secret_key.received_shares / this.progress.secret_key.total_expected) * 100)\r\n    },\r\n    galoisKeysPercent() {\r\n      if (!this.progress) return 0\r\n      return Math.round((this.progress.galois_keys.completed_keys / this.progress.galois_keys.total_keys) * 100)\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.fetchProgress()\r\n  },\r\n  methods: {\r\n    async fetchProgress() {\r\n      try {\r\n        const res = await getKeyProgress()\r\n        this.progress = res.data\r\n      } catch (e) {\r\n        console.error('获取密钥进度失败:', e)\r\n        alert('获取密钥进度失败: ' + (e.response?.data?.message || e.message))\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.progress-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.key-section, .overall-section {\r\n  background: #f5f5f5;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 20px;\r\n  background: #ddd;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  margin: 10px 0;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: #4caf50;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.progress-fill.overall {\r\n  background: #2196f3;\r\n}\r\n\r\n.progress-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.round-status {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.round-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-top: 20px;\r\n}\r\n</style> "],"mappings":"AA+EA,SAASA,cAAa,QAAS,mBAAkB;AACjD,OAAOC,WAAU,MAAO,8BAA6B;AAErD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAAEF;EAAY,CAAC;EAC3BG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACF,QAAQ,EAAE,OAAO;MAC3B,OAAOG,IAAI,CAACC,KAAK,CAAE,IAAI,CAACJ,QAAQ,CAACK,UAAU,CAACC,eAAc,GAAI,IAAI,CAACN,QAAQ,CAACK,UAAU,CAACE,cAAc,GAAI,GAAG;IAC9G,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACR,QAAQ,EAAE,OAAO;MAC3B,OAAOG,IAAI,CAACC,KAAK,CAAE,IAAI,CAACJ,QAAQ,CAACS,UAAU,CAACH,eAAc,GAAI,IAAI,CAACN,QAAQ,CAACS,UAAU,CAACF,cAAc,GAAI,GAAG;IAC9G,CAAC;IACDG,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACV,QAAQ,EAAE,OAAO;MAC3B,OAAOG,IAAI,CAACC,KAAK,CAAE,IAAI,CAACJ,QAAQ,CAACW,WAAW,CAACC,cAAa,GAAI,IAAI,CAACZ,QAAQ,CAACW,WAAW,CAACE,UAAU,GAAI,GAAG;IAC3G;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,aAAa,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,GAAE,GAAI,MAAMtB,cAAc,CAAC;QACjC,IAAI,CAACK,QAAO,GAAIiB,GAAG,CAAClB,IAAG;MACzB,EAAE,OAAOmB,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEF,CAAC;QAC5BG,KAAK,CAAC,YAAW,IAAKH,CAAC,CAACI,QAAQ,EAAEvB,IAAI,EAAEwB,OAAM,IAAKL,CAAC,CAACK,OAAO,CAAC;MAC/D;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}