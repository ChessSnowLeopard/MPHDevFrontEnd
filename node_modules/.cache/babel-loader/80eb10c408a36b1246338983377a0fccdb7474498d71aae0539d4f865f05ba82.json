{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"margin-bottom\": \"20px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin-left\": \"20px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"label\", null, [_cache[3] || (_cache[3] = _createTextVNode(\" 参与方数量： \")), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.participantCount = $event),\n    type: \"number\",\n    min: \"1\",\n    style: {\n      \"width\": \"60px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.participantCount, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"label\", _hoisted_2, [_cache[5] || (_cache[5] = _createTextVNode(\" 数据集划分方式： \")), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.dataSplitType = $event)\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"option\", {\n    value: \"horizontal\"\n  }, \"horizontal\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"vertical\"\n  }, \"vertical\", -1 /* CACHED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.dataSplitType]])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.submitStart && $options.submitStart(...args))\n  }, \"启动\")]), _cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"协调器仪表盘\", -1 /* CACHED */)), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"参与方数量: \" + _toDisplayString($data.status.participantCount), 1 /* TEXT */), _createElementVNode(\"li\", null, \"数据集划分方式: \" + _toDisplayString($data.status.dataSplitType), 1 /* TEXT */), _createElementVNode(\"li\", null, \"最小参与方阈值: \" + _toDisplayString($data.status.minParticipants) + \" (\" + _toDisplayString($data.status.minParticipantsPercent) + \"%)\", 1 /* TEXT */), _createElementVNode(\"li\", null, \"监听端口: \" + _toDisplayString($data.status.port), 1 /* TEXT */), _createElementVNode(\"li\", null, \"当前状态: \" + _toDisplayString($data.status.currentStatus), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["style","_createElementBlock","_createElementVNode","_hoisted_1","$data","participantCount","$event","type","min","number","_hoisted_2","dataSplitType","value","onClick","_cache","args","$options","submitStart","_toDisplayString","status","minParticipants","minParticipantsPercent","port","currentStatus"],"sources":["D:\\down\\MPHEDEV\\encryption_co\\src\\views\\CoordinatorDashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"margin-bottom: 20px;\">\n      <label>\n        参与方数量：\n        <input v-model.number=\"participantCount\" type=\"number\" min=\"1\" style=\"width: 60px;\" />\n      </label>\n      <label style=\"margin-left: 20px;\">\n        数据集划分方式：\n        <select v-model=\"dataSplitType\">\n          <option value=\"horizontal\">horizontal</option>\n          <option value=\"vertical\">vertical</option>\n        </select>\n      </label>\n      <button @click=\"submitStart\">启动</button>\n    </div>\n    <h2>协调器仪表盘</h2>\n    <ul>\n      <li>参与方数量: {{ status.participantCount }}</li>\n      <li>数据集划分方式: {{ status.dataSplitType }}</li>\n      <li>最小参与方阈值: {{ status.minParticipants }} ({{ status.minParticipantsPercent }}%)</li>\n      <li>监听端口: {{ status.port }}</li>\n      <li>当前状态: {{ status.currentStatus }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { startCoordinator, getCoordinatorStatus } from '@/api/coordinator'\n\nexport default {\n  name: 'CoordinatorDashboard',\n  data() {\n    return {\n      participantCount: 1,\n      dataSplitType: 'horizontal',\n      status: null\n    }\n  },\n  methods: {\n    async submitStart() {\n      try {\n        const res = await startCoordinator({\n          participant_count: this.participantCount,\n          data_split_type: this.dataSplitType\n        });\n        alert('启动成功: ' + res.data.message);\n        this.fetchStatus();\n      } catch (e) {\n        alert('启动失败: ' + (e.response?.data?.message || e.message));\n      }\n    },\n    async fetchStatus() {\n      const res = await getCoordinatorStatus();\n      this.status = res.data;\n    }\n  },\n  mounted() {\n    this.fetchStatus();\n  }\n}\n</script>\n"],"mappings":";;EAESA,KAA4B,EAA5B;IAAA;EAAA;AAA4B;;EAKxBA,KAA0B,EAA1B;IAAA;EAAA;AAA0B;;uBANrCC,mBAAA,CAuBM,cAtBJC,mBAAA,CAaM,OAbNC,UAaM,GAZJD,mBAAA,CAGQ,gB,2CAHD,UAEL,I,gBAAAA,mBAAA,CAAsF;+DAA/DE,KAAA,CAAAC,gBAAgB,GAAAC,MAAA;IAAEC,IAAI,EAAC,QAAQ;IAACC,GAAG,EAAC,GAAG;IAACR,KAAoB,EAApB;MAAA;IAAA;iDAAxCI,KAAA,CAAAC,gBAAgB,E;IAAxBI,MAAM,EAAd;EAAiC,E,MAE1CP,mBAAA,CAMQ,SANRQ,UAMQ,G,2CAN0B,YAEhC,I,gBAAAR,mBAAA,CAGS;+DAHQE,KAAA,CAAAO,aAAa,GAAAL,MAAA;gCAC5BJ,mBAAA,CAA8C;IAAtCU,KAAK,EAAC;EAAY,GAAC,YAAU,oBACrCV,mBAAA,CAA0C;IAAlCU,KAAK,EAAC;EAAU,GAAC,UAAQ,mB,2CAFlBR,KAAA,CAAAO,aAAa,E,KAKhCT,mBAAA,CAAwC;IAA/BW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,IAAE,E,6BAEjCb,mBAAA,CAAe,YAAX,QAAM,qBACVA,mBAAA,CAMK,aALHA,mBAAA,CAA6C,YAAzC,SAAO,GAAAgB,gBAAA,CAAGd,KAAA,CAAAe,MAAM,CAACd,gBAAgB,kBACrCH,mBAAA,CAA4C,YAAxC,WAAS,GAAAgB,gBAAA,CAAGd,KAAA,CAAAe,MAAM,CAACR,aAAa,kBACpCT,mBAAA,CAAqF,YAAjF,WAAS,GAAAgB,gBAAA,CAAGd,KAAA,CAAAe,MAAM,CAACC,eAAe,IAAG,IAAE,GAAAF,gBAAA,CAAGd,KAAA,CAAAe,MAAM,CAACE,sBAAsB,IAAG,IAAE,iBAChFnB,mBAAA,CAAgC,YAA5B,QAAM,GAAAgB,gBAAA,CAAGd,KAAA,CAAAe,MAAM,CAACG,IAAI,kBACxBpB,mBAAA,CAAyC,YAArC,QAAM,GAAAgB,gBAAA,CAAGd,KAAA,CAAAe,MAAM,CAACI,aAAa,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}